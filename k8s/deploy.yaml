apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk015-walktogether
  namespace: skala-practice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sk015-walktogether
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8081'
        prometheus.io/path: '/actuator/prometheus'
        update: b4b0bfcf04c7cd0f658321d02714cb5d
      labels:
        app: sk015-walktogether
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: skala-k8s-practice
                operator: In
                values:
                - "yes"
      tolerations:
      - key: skala-k8s-practice
        operator: Equal
        value: "yes"
        effect: NoSchedule
      containers:
      - name: walktogether
        # image: amdp-registry.skala-ai.com/skala25a/sk015-walktogether:latest
        image: amdp-registry.skala-ai.com/skala25a/sk015-walktogether:latest-5-86e4166423b8
        imagePullPolicy: Always
        env:
        - name: LOGGING_LEVEL_ROOT
          value: DEBUG
        - name: USER_NAME
          value: sk015
        - name: NAMESPACE
          value: skala-practice
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 3
          failureThreshold: 2


